{{- if .Values.pgbouncer.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pvpipe.fullname" . }}-pgbouncer
  labels:
    {{- include "pvpipe.labels" . | nindent 4 }}
    app.kubernetes.io/component: pgbouncer
spec:
  replicas: {{ .Values.pgbouncer.replicas | default 1 }}
  selector:
    matchLabels:
      {{- include "pvpipe.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: pgbouncer
  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/services/pgbouncer/secret.yaml") . | sha256sum }}
      labels:
        {{- include "pvpipe.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: pgbouncer
    spec:
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecrets }}
      {{- end }}
      containers:
        - name: pgbouncer
          image: "{{ .Values.pgbouncer.image.repository }}:{{ .Values.pgbouncer.image.tag }}"
          imagePullPolicy: {{ .Values.pgbouncer.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - name: pgbouncer
              containerPort: {{ .Values.pgbouncer.config.listenPort | default 6432 }}
              protocol: TCP
          env:
            # Bitnami PgBouncer environment variables
            - name: PGBOUNCER_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-pgbouncer-secret
                  key: postgres-database
            - name: PGBOUNCER_PORT
              value: "{{ .Values.pgbouncer.config.listenPort | default 6432 }}"
            - name: PGBOUNCER_BIND_ADDRESS
              value: {{ .Values.pgbouncer.config.listenAddr | default "0.0.0.0" }}
            # PostgreSQL backend configuration
            - name: POSTGRESQL_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-pgbouncer-secret
                  key: postgres-host
            - name: POSTGRESQL_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-pgbouncer-secret
                  key: postgres-port
            - name: POSTGRESQL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-pgbouncer-secret
                  key: postgres-user
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-pgbouncer-secret
                  key: postgres-password
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-pgbouncer-secret
                  key: postgres-database
            # PgBouncer configuration
            - name: PGBOUNCER_AUTH_TYPE
              value: {{ .Values.pgbouncer.config.authType | default "md5" | quote }}
            - name: PGBOUNCER_POOL_MODE
              value: {{ .Values.pgbouncer.config.poolMode | default "transaction" | quote }}
            - name: PGBOUNCER_DEFAULT_POOL_SIZE
              value: {{ .Values.pgbouncer.config.defaultPoolSize | default 25 | quote }}
            - name: PGBOUNCER_MAX_CLIENT_CONN
              value: {{ .Values.pgbouncer.config.maxClientConn | default 100 | quote }}
            - name: PGBOUNCER_MAX_DB_CONNECTIONS
              value: {{ .Values.pgbouncer.config.maxDbConnections | default 50 | quote }}
            - name: PGBOUNCER_RESERVE_POOL_SIZE
              value: {{ .Values.pgbouncer.config.reservePoolSize | default 5 | quote }}
            - name: PGBOUNCER_RESERVE_POOL_TIMEOUT
              value: {{ .Values.pgbouncer.config.reservePoolTimeout | default 3 | quote }}
            - name: PGBOUNCER_SERVER_LIFETIME
              value: {{ .Values.pgbouncer.config.serverLifetime | default 3600 | quote }}
            - name: PGBOUNCER_SERVER_IDLE_TIMEOUT
              value: {{ .Values.pgbouncer.config.serverIdleTimeout | default 600 | quote }}
            # Logging
            - name: PGBOUNCER_LOG_CONNECTIONS
              value: {{ .Values.pgbouncer.config.logConnections | default 1 | quote }}
            - name: PGBOUNCER_LOG_DISCONNECTIONS
              value: {{ .Values.pgbouncer.config.logDisconnections | default 1 | quote }}
            - name: PGBOUNCER_LOG_POOLER_ERRORS
              value: {{ .Values.pgbouncer.config.logPoolerErrors | default 1 | quote }}
            # Stats user
            - name: PGBOUNCER_STATS_USERS
              value: {{ .Values.pgbouncer.config.statsUsers | default "pgbouncer" | quote }}
            # Ignore startup parameters
            - name: PGBOUNCER_IGNORE_STARTUP_PARAMETERS
              value: "extra_float_digits"
            # Set databases dynamically
            - name: PGBOUNCER_SET_DATABASE_USER
              value: "yes"
            - name: PGBOUNCER_SET_DATABASE_PASSWORD
              value: "yes"
          livenessProbe:
            tcpSocket:
              port: pgbouncer
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: pgbouncer
            initialDelaySeconds: 5
            periodSeconds: 5
          {{- if .Values.pgbouncer.resources }}
          resources:
            {{- toYaml .Values.pgbouncer.resources | nindent 12 }}
          {{- end }}
{{- end }}