{{- if .Values.pgbouncer.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pvpipe.fullname" . }}-pgbouncer
  labels:
    {{- include "pvpipe.labels" . | nindent 4 }}
    app.kubernetes.io/component: pgbouncer
spec:
  replicas: {{ .Values.pgbouncer.replicas | default 1 }}
  selector:
    matchLabels:
      {{- include "pvpipe.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: pgbouncer
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/services/pgbouncer/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/services/pgbouncer/secret.yaml") . | sha256sum }}
      labels:
        {{- include "pvpipe.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: pgbouncer
    spec:
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecrets }}
      {{- end }}
      containers:
        - name: pgbouncer
          image: "{{ .Values.pgbouncer.image.repository }}:{{ .Values.pgbouncer.image.tag }}"
          imagePullPolicy: {{ .Values.pgbouncer.image.pullPolicy | default "IfNotPresent" }}
          command: ["/bin/sh"]
          args: ["/etc/pgbouncer/pgbouncer-init.sh"]
          ports:
            - name: pgbouncer
              containerPort: {{ .Values.pgbouncer.config.listenPort | default 5432 }}
              protocol: TCP
          env:
            # Extract database connection details from original DATABASE_URL
            - name: DATABASE_URL_ORIGINAL
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: DATABASE_URL_ORIGINAL
            - name: DATABASES_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-pgbouncer-secret
                  key: postgres-host
            - name: DATABASES_PORT
              value: "5432"
            - name: DATABASES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-pgbouncer-secret
                  key: postgres-user
            - name: DATABASES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-pgbouncer-secret
                  key: postgres-password
            - name: DATABASES_DBNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-pgbouncer-secret
                  key: postgres-database
            # PgBouncer admin user
            - name: PGBOUNCER_ADMIN_USERS
              value: {{ .Values.pgbouncer.config.adminUsers | default "pgbouncer" | quote }}
            - name: PGBOUNCER_STATS_USERS
              value: {{ .Values.pgbouncer.config.statsUsers | default "pgbouncer" | quote }}
          volumeMounts:
            - name: pgbouncer-config
              mountPath: /etc/pgbouncer/pgbouncer-init.sh
              subPath: pgbouncer-init.sh
              readOnly: true
          livenessProbe:
            tcpSocket:
              port: pgbouncer
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: pgbouncer
            initialDelaySeconds: 5
            periodSeconds: 5
          {{- if .Values.pgbouncer.resources }}
          resources:
            {{- toYaml .Values.pgbouncer.resources | nindent 12 }}
          {{- end }}
      volumes:
        - name: pgbouncer-config
          configMap:
            name: {{ include "pvpipe.fullname" . }}-pgbouncer-config
            defaultMode: 0755
{{- end }}