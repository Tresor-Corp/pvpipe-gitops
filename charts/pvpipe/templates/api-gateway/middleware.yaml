{{- if .Values.traefik.enabled }}
{{- range $name, $route := .Values.traefik.routes }}
{{- if and $route.enabled $route.stripPrefix }}
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ include "pvpipe.fullname" $ }}-strip-{{ $name }}
  labels:
    {{- include "pvpipe.labels" $ | nindent 4 }}
    app.kubernetes.io/component: traefik-middleware
spec:
  stripPrefix:
    prefixes:
      - {{ $route.pathPrefix }}
{{- end }}
{{- end }}

{{- if .Values.traefik.middleware.rateLimit.enabled }}
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ include "pvpipe.fullname" . }}-rate-limit
  labels:
    {{- include "pvpipe.labels" . | nindent 4 }}
    app.kubernetes.io/component: traefik-middleware
spec:
  rateLimit:
    average: {{ .Values.traefik.middleware.rateLimit.average | default 100 }}
    period: {{ .Values.traefik.middleware.rateLimit.period | default "1m" }}
    burst: {{ .Values.traefik.middleware.rateLimit.burst | default 50 }}
{{- end }}

{{- if .Values.traefik.middleware.headers.enabled }}
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ include "pvpipe.fullname" . }}-headers
  labels:
    {{- include "pvpipe.labels" . | nindent 4 }}
    app.kubernetes.io/component: traefik-middleware
spec:
  headers:
    {{- if .Values.traefik.middleware.headers.customRequestHeaders }}
    customRequestHeaders:
      {{- toYaml .Values.traefik.middleware.headers.customRequestHeaders | nindent 6 }}
    {{- end }}
    {{- if .Values.traefik.middleware.headers.customResponseHeaders }}
    customResponseHeaders:
      {{- toYaml .Values.traefik.middleware.headers.customResponseHeaders | nindent 6 }}
    {{- end }}
    stsSeconds: {{ .Values.traefik.middleware.headers.stsSeconds | default 31536000 }}
    stsIncludeSubdomains: {{ .Values.traefik.middleware.headers.stsIncludeSubdomains | default true }}
    stsPreload: {{ .Values.traefik.middleware.headers.stsPreload | default true }}
    forceSTSHeader: {{ .Values.traefik.middleware.headers.forceSTSHeader | default true }}
    contentTypeNosniff: {{ .Values.traefik.middleware.headers.contentTypeNosniff | default true }}
    browserXssFilter: {{ .Values.traefik.middleware.headers.browserXssFilter | default true }}
{{- end }}

{{- if .Values.traefik.middleware.retry.enabled }}
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ include "pvpipe.fullname" . }}-retry
  labels:
    {{- include "pvpipe.labels" . | nindent 4 }}
    app.kubernetes.io/component: traefik-middleware
spec:
  retry:
    attempts: {{ .Values.traefik.middleware.retry.attempts | default 3 }}
    initialInterval: {{ .Values.traefik.middleware.retry.initialInterval | default "100ms" }}
{{- end }}

{{- if .Values.traefik.middleware.circuitBreaker.enabled }}
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ include "pvpipe.fullname" . }}-circuit-breaker
  labels:
    {{- include "pvpipe.labels" . | nindent 4 }}
    app.kubernetes.io/component: traefik-middleware
spec:
  circuitBreaker:
    expression: {{ .Values.traefik.middleware.circuitBreaker.expression | default "NetworkErrorRatio() > 0.30 || ResponseCodeRatio(500, 600, 0, 600) > 0.50" }}
{{- end }}

{{- if .Values.traefik.middleware.compress.enabled }}
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ include "pvpipe.fullname" . }}-compress
  labels:
    {{- include "pvpipe.labels" . | nindent 4 }}
    app.kubernetes.io/component: traefik-middleware
spec:
  compress: {}
{{- end }}

{{- if .Values.traefik.middleware.basicAuth.enabled }}
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ include "pvpipe.fullname" . }}-basic-auth
  labels:
    {{- include "pvpipe.labels" . | nindent 4 }}
    app.kubernetes.io/component: traefik-middleware
spec:
  basicAuth:
    secret: {{ .Values.traefik.middleware.basicAuth.existingSecret | default (printf "%s-basic-auth" (include "pvpipe.fullname" .)) }}
{{- end }}

{{- if .Values.traefik.middleware.cors.enabled }}
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ include "pvpipe.fullname" . }}-cors
  labels:
    {{- include "pvpipe.labels" . | nindent 4 }}
    app.kubernetes.io/component: traefik-middleware
spec:
  headers:
    accessControlAllowMethods:
      {{- toYaml .Values.traefik.middleware.cors.allowMethods | nindent 6 }}
    accessControlAllowHeaders:
      {{- toYaml .Values.traefik.middleware.cors.allowHeaders | nindent 6 }}
    accessControlAllowOriginList:
      {{- toYaml .Values.traefik.middleware.cors.allowOrigins | nindent 6 }}
    accessControlMaxAge: {{ .Values.traefik.middleware.cors.maxAge | default 100 }}
    addVaryHeader: {{ .Values.traefik.middleware.cors.addVaryHeader | default true }}
{{- end }}

{{- if .Values.traefik.middleware.optionsRateLimit.enhanced.enabled }}
---
# Enhanced OPTIONS-specific rate limiting middleware
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ include "pvpipe.fullname" . }}-rate-limit-options-enhanced
  labels:
    {{- include "pvpipe.labels" . | nindent 4 }}
    app.kubernetes.io/component: traefik-middleware
  annotations:
    security.pvpipe.io/purpose: "Enhanced rate limiting for OPTIONS preflight requests"
    security.pvpipe.io/security-review: "2025-08-02"
spec:
  rateLimit:
    average: {{ .Values.traefik.middleware.optionsRateLimit.enhanced.average | default 1200 }}
    period: {{ .Values.traefik.middleware.optionsRateLimit.enhanced.period | default "1m" }}
    burst: {{ .Values.traefik.middleware.optionsRateLimit.enhanced.burst | default 300 }}
    sourceCriterion:
      ipStrategy:
        depth: {{ .Values.traefik.middleware.optionsRateLimit.enhanced.depth | default 2 }}
        excludedIPs:
          - "127.0.0.1/32"
          - "10.0.0.0/8"
          - "172.16.0.0/12"
          - "192.168.0.0/16"
          - "100.64.0.0/10"
          {{- if .Values.traefik.middleware.optionsRateLimit.enhanced.trustedIPs }}
          {{- toYaml .Values.traefik.middleware.optionsRateLimit.enhanced.trustedIPs | nindent 10 }}
          {{- end }}
{{- end }}

{{- if .Values.traefik.middleware.originValidation.enabled }}
---
# Origin validation middleware for CORS preflight
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ include "pvpipe.fullname" . }}-origin-validation
  labels:
    {{- include "pvpipe.labels" . | nindent 4 }}
    app.kubernetes.io/component: traefik-middleware
  annotations:
    security.pvpipe.io/purpose: "Origin header validation for CORS preflight"
    security.pvpipe.io/protection: "HTTP method override attack prevention"
spec:
  headers:
    customRequestHeaders:
      # Remove potentially dangerous headers
      X-HTTP-Method-Override: ""
      X-HTTP-Method: ""
      X-Method-Override: ""
    customResponseHeaders:
      X-Content-Type-Options: "nosniff"
      X-Frame-Options: "DENY"
      X-XSS-Protection: "1; mode=block"
      Referrer-Policy: "strict-origin-when-cross-origin"
      Cache-Control: "public, max-age=86400"
      X-CORS-Preflight: "enhanced-handler"
{{- end }}

{{- if .Values.traefik.middleware.cors.enhanced.enabled }}
---
# Enhanced CORS middleware for OPTIONS requests
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ include "pvpipe.fullname" . }}-cors-enhanced
  labels:
    {{- include "pvpipe.labels" . | nindent 4 }}
    app.kubernetes.io/component: traefik-middleware
  annotations:
    security.pvpipe.io/purpose: "Enhanced CORS handling for OPTIONS requests"
    security.pvpipe.io/origin-validation: "strict"
spec:
  headers:
    accessControlAllowMethods:
      {{- toYaml .Values.traefik.middleware.cors.allowMethods | nindent 6 }}
    accessControlAllowHeaders:
      - "Content-Type"
      - "Authorization"
      - "X-Requested-With"
      - "Accept"
      - "Origin"
      - "Cache-Control"
      {{- if .Values.traefik.middleware.cors.enhanced.additionalHeaders }}
      {{- toYaml .Values.traefik.middleware.cors.enhanced.additionalHeaders | nindent 6 }}
      {{- end }}
    {{- if .Values.traefik.middleware.cors.enhanced.strictOrigins }}
    accessControlAllowOriginList:
      {{- toYaml .Values.traefik.middleware.cors.enhanced.allowOrigins | nindent 6 }}
    {{- else }}
    accessControlAllowOriginListRegex:
      {{- toYaml .Values.traefik.middleware.cors.enhanced.allowOriginRegex | nindent 6 }}
    {{- end }}
    accessControlMaxAge: {{ .Values.traefik.middleware.cors.enhanced.maxAge | default 86400 }}
    accessControlAllowCredentials: {{ .Values.traefik.middleware.cors.enhanced.allowCredentials | default false }}
    addVaryHeader: true
{{- end }}

{{- if .Values.traefik.middleware.optionsMonitoring.enabled }}
---
# Security monitoring middleware for OPTIONS requests
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ include "pvpipe.fullname" . }}-options-security-monitoring
  labels:
    {{- include "pvpipe.labels" . | nindent 4 }}
    app.kubernetes.io/component: traefik-middleware
  annotations:
    security.pvpipe.io/purpose: "Security monitoring for OPTIONS preflight requests"
spec:
  headers:
    customResponseHeaders:
      X-Security-Policy: "options-bypass-monitored"
      X-Rate-Limit-Policy: "graduated-enforcement"

---
# Advanced logging middleware for OPTIONS security analysis
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ include "pvpipe.fullname" . }}-options-advanced-logging
  labels:
    {{- include "pvpipe.labels" . | nindent 4 }}
    app.kubernetes.io/component: traefik-middleware
  annotations:
    security.pvpipe.io/purpose: "Advanced security logging for OPTIONS analysis"
spec:
  accessLog:
    fields:
      defaultMode: keep
      names:
        ClientAddr: keep
        ClientHost: keep
        RequestMethod: keep
        RequestPath: keep
        Duration: keep
        OriginStatus: keep
        downstream_request_Origin: keep
        downstream_request_Access-Control-Request-Method: keep
        downstream_request_Access-Control-Request-Headers: keep
{{- end }}
{{- end }}