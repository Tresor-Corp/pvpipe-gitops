{{- if and .Values.traefik.enabled false }}
---
# Enhanced OPTIONS-specific rate limiting middleware with graduated limits
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ include "pvpipe.fullname" . }}-rate-limit-options-enhanced
  labels:
    {{- include "pvpipe.labels" . | nindent 4 }}
    app.kubernetes.io/component: traefik-middleware
  annotations:
    security.pvpipe.io/purpose: "Enhanced rate limiting for OPTIONS preflight requests"
    security.pvpipe.io/security-review: "2025-08-02"
    security.pvpipe.io/graduated-limits: "true"
spec:
  rateLimit:
    # Security review recommended: 20 req/sec for OPTIONS (1200/min)
    average: {{ .Values.traefik.middleware.optionsRateLimit.enhanced.average | default 1200 }}
    period: {{ .Values.traefik.middleware.optionsRateLimit.enhanced.period | default "1m" }}
    burst: {{ .Values.traefik.middleware.optionsRateLimit.enhanced.burst | default 300 }}
    sourceCriterion:
      # Rate limit by IP with enhanced exclusions
      ipStrategy:
        depth: {{ .Values.traefik.middleware.optionsRateLimit.enhanced.depth | default 2 }}
        excludedIPs:
          # Standard private ranges
          - "127.0.0.1/32"
          - "10.0.0.0/8"
          - "172.16.0.0/12"
          - "192.168.0.0/16"
          # Kubernetes service ranges
          - "100.64.0.0/10"
          # Additional trusted ranges from values
          {{- if .Values.traefik.middleware.optionsRateLimit.enhanced.trustedIPs }}
          {{- toYaml .Values.traefik.middleware.optionsRateLimit.enhanced.trustedIPs | nindent 10 }}
          {{- end }}

---
# Origin validation middleware for CORS preflight
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ include "pvpipe.fullname" . }}-origin-validation
  labels:
    {{- include "pvpipe.labels" . | nindent 4 }}
    app.kubernetes.io/component: traefik-middleware
  annotations:
    security.pvpipe.io/purpose: "Strict Origin header validation for CORS preflight"
    security.pvpipe.io/protection: "HTTP method override attack prevention"
spec:
  headers:
    # Strict origin validation
    customRequestHeaders:
      # Remove potentially dangerous headers that could bypass security
      X-HTTP-Method-Override: ""
      X-HTTP-Method: ""
      X-Method-Override: ""
      # Add correlation ID for request tracking
      X-Request-ID: "{{ "{{" }}.request.id{{ "}}" }}"
      X-Correlation-ID: "{{ "{{" }}.request.correlation.id{{ "}}" }}"
    customResponseHeaders:
      # Security headers specifically for OPTIONS responses
      X-Content-Type-Options: "nosniff"
      X-Frame-Options: "DENY"
      X-XSS-Protection: "1; mode=block"
      Referrer-Policy: "strict-origin-when-cross-origin"
      # OPTIONS-specific cache control (short-lived)
      Cache-Control: "public, max-age=86400"  # 24 hours for preflight
      # Correlation headers for debugging
      X-Request-ID: "{{ "{{" }}.request.id{{ "}}" }}"
      X-Correlation-ID: "{{ "{{" }}.request.correlation.id{{ "}}" }}"
      # Identify this as handled by OPTIONS bypass
      X-CORS-Preflight: "enhanced-handler"
      X-CORS-Policy: "strict-origin-validation"

---
# Enhanced CORS middleware without forward-auth
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ include "pvpipe.fullname" . }}-cors-enhanced
  labels:
    {{- include "pvpipe.labels" . | nindent 4 }}
    app.kubernetes.io/component: traefik-middleware
  annotations:
    security.pvpipe.io/purpose: "Enhanced CORS handling without forward-auth for OPTIONS"
    security.pvpipe.io/origin-validation: "strict"
spec:
  headers:
    # Enhanced CORS configuration
    accessControlAllowMethods:
      {{- toYaml .Values.traefik.middleware.cors.allowMethods | nindent 6 }}
    accessControlAllowHeaders:
      # Extended headers list for modern applications
      - "Content-Type"
      - "Authorization"
      - "X-Requested-With"
      - "Accept"
      - "Origin"
      - "Cache-Control"
      - "X-File-Name"
      - "X-API-Version"
      - "X-Request-ID"
      {{- if .Values.traefik.middleware.cors.enhanced.additionalHeaders }}
      {{- toYaml .Values.traefik.middleware.cors.enhanced.additionalHeaders | nindent 6 }}
      {{- end }}
    # Strict origin control based on environment
    {{- if .Values.traefik.middleware.cors.enhanced.strictOrigins }}
    accessControlAllowOriginList:
      {{- toYaml .Values.traefik.middleware.cors.enhanced.allowOrigins | nindent 6 }}
    {{- else }}
    accessControlAllowOriginListRegex:
      # Development/UAT environments - more permissive
      - "^https?://localhost(:[0-9]+)?$"
      - "^https?://127\\.0\\.0\\.1(:[0-9]+)?$"
      - "^https://.*\\.tresor\\.vn$"
      - "^https://.*\\.pvpipe\\.com$"
      {{- if .Values.traefik.middleware.cors.enhanced.allowOriginRegex }}
      {{- toYaml .Values.traefik.middleware.cors.enhanced.allowOriginRegex | nindent 6 }}
      {{- end }}
    {{- end }}
    accessControlMaxAge: {{ .Values.traefik.middleware.cors.enhanced.maxAge | default 86400 }}  # 24 hours
    accessControlAllowCredentials: {{ .Values.traefik.middleware.cors.enhanced.allowCredentials | default false }}
    addVaryHeader: true

---
# Security monitoring middleware for OPTIONS requests
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ include "pvpipe.fullname" . }}-options-security-monitoring
  labels:
    {{- include "pvpipe.labels" . | nindent 4 }}
    app.kubernetes.io/component: traefik-middleware
  annotations:
    security.pvpipe.io/purpose: "Security monitoring and alerting for OPTIONS abuse"
spec:
  headers:
    customResponseHeaders:
      # Security monitoring headers
      X-Security-Policy: "options-bypass-monitored"
      X-Rate-Limit-Policy: "graduated-enforcement"
      # Timestamp for security analysis
      X-Processing-Time: "{{ "{{" }}.processing.time{{ "}}" }}"
    customRequestHeaders:
      # Enhanced logging context
      X-Original-IP: "{{ "{{" }}.request.client.ip{{ "}}" }}"
      X-Forwarded-For-Validation: "{{ "{{" }}.request.headers.X-Forwarded-For{{ "}}" }}"
      X-Real-IP-Validation: "{{ "{{" }}.request.headers.X-Real-IP{{ "}}" }}"

{{- if .Values.traefik.middleware.optionsMonitoring.enabled }}
---
# Advanced logging middleware for OPTIONS security analysis
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: {{ include "pvpipe.fullname" . }}-options-advanced-logging
  labels:
    {{- include "pvpipe.labels" . | nindent 4 }}
    app.kubernetes.io/component: traefik-middleware
  annotations:
    security.pvpipe.io/purpose: "Advanced security logging for OPTIONS preflight analysis"
spec:
  accessLog:
    # Enhanced logging for security analysis
    fields:
      defaultMode: keep
      names:
        # Client information
        ClientAddr: keep
        ClientHost: keep
        ClientPort: keep
        ClientUsername: drop  # Not applicable for OPTIONS
        # Request details
        RequestAddr: keep
        RequestCount: keep
        RequestHost: keep
        RequestMethod: keep
        RequestPath: keep
        RequestPort: keep
        RequestProtocol: keep
        RequestScheme: keep
        # Timing information
        Duration: keep
        OriginDuration: keep
        Overhead: keep
        StartUTC: keep
        # Response details
        OriginStatus: keep
        RetryAttempts: keep
        # CORS-specific headers
        downstream_request_Origin: keep
        downstream_request_Access-Control-Request-Method: keep
        downstream_request_Access-Control-Request-Headers: keep
        downstream_request_Referer: keep
        downstream_request_User-Agent: keep
        # Security headers
        downstream_request_X-Forwarded-For: keep
        downstream_request_X-Real-IP: keep
        downstream_request_X-HTTP-Method-Override: keep
        downstream_request_X-HTTP-Method: keep
        downstream_request_X-Method-Override: keep
        # Response security headers
        upstream_response_X-Request-ID: keep
        upstream_response_X-Correlation-ID: keep
{{- end }}
{{- end }}