{{- if and .Values.traefik.enabled .Values.services.corsHandler.enabled }}
---
# Enhanced CORS Handler Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pvpipe.fullname" . }}-cors-handler
  labels:
    {{- include "pvpipe.labels" . | nindent 4 }}
    app.kubernetes.io/component: cors-handler
  annotations:
    security.pvpipe.io/purpose: "Lightweight CORS preflight handler for OPTIONS bypass"
    security.pvpipe.io/container-security: "non-root,read-only-filesystem"
spec:
  replicas: {{ .Values.services.corsHandler.replicas | default 2 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      {{- include "pvpipe.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: cors-handler
  template:
    metadata:
      labels:
        {{- include "pvpipe.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: cors-handler
      annotations:
        # Force pod restart on config changes
        checksum/config: {{ include (print $.Template.BasePath "/services/cors-handler/configmap.yaml") . | sha256sum }}
        # Security annotations
        security.pvpipe.io/network-policy: "cors-handler"
        security.pvpipe.io/pod-security: "restricted"
    spec:
      # Security context - non-root execution
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534  # nobody user
        runAsGroup: 65534
        fsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      # Service account with minimal permissions
      serviceAccountName: {{ include "pvpipe.serviceAccountName" . }}-cors-handler
      # DNS configuration for faster startup
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "2"
          - name: edns0
      containers:
        - name: cors-handler
          image: "{{ .Values.services.corsHandler.image.repository }}:{{ .Values.services.corsHandler.image.tag }}"
          imagePullPolicy: {{ .Values.services.corsHandler.image.pullPolicy | default "IfNotPresent" }}
          # Container security context
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534
            capabilities:
              drop:
                - ALL
          ports:
            - name: http
              containerPort: {{ .Values.services.corsHandler.port | default 8080 }}
              protocol: TCP
          # Health checks
          livenessProbe:
            httpGet:
              path: {{ .Values.services.corsHandler.healthCheck.path | default "/health" }}
              port: http
              scheme: HTTP
            initialDelaySeconds: {{ .Values.services.corsHandler.healthCheck.initialDelaySeconds | default 10 }}
            periodSeconds: {{ .Values.services.corsHandler.healthCheck.periodSeconds | default 30 }}
            timeoutSeconds: {{ .Values.services.corsHandler.healthCheck.timeoutSeconds | default 3 }}
            failureThreshold: {{ .Values.services.corsHandler.healthCheck.failureThreshold | default 3 }}
          readinessProbe:
            httpGet:
              path: {{ .Values.services.corsHandler.healthCheck.readinessPath | default "/ready" }}
              port: http
              scheme: HTTP
            initialDelaySeconds: {{ .Values.services.corsHandler.healthCheck.readinessInitialDelaySeconds | default 5 }}
            periodSeconds: {{ .Values.services.corsHandler.healthCheck.readinessPeriodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.services.corsHandler.healthCheck.timeoutSeconds | default 3 }}
            failureThreshold: {{ .Values.services.corsHandler.healthCheck.readinessFailureThreshold | default 3 }}
          # Startup probe for faster rollouts
          startupProbe:
            httpGet:
              path: {{ .Values.services.corsHandler.healthCheck.path | default "/health" }}
              port: http
              scheme: HTTP
            initialDelaySeconds: {{ .Values.services.corsHandler.healthCheck.startupInitialDelaySeconds | default 5 }}
            periodSeconds: {{ .Values.services.corsHandler.healthCheck.startupPeriodSeconds | default 5 }}
            timeoutSeconds: {{ .Values.services.corsHandler.healthCheck.timeoutSeconds | default 3 }}
            failureThreshold: {{ .Values.services.corsHandler.healthCheck.startupFailureThreshold | default 10 }}
          # Resource limits for security and performance
          resources:
            {{- toYaml .Values.services.corsHandler.resources | nindent 12 }}
          # Environment variables
          env:
            - name: PORT
              value: "{{ .Values.services.corsHandler.port | default 8080 }}"
            - name: LOG_LEVEL
              value: "{{ .Values.services.corsHandler.logLevel | default "info" }}"
            - name: CORS_MAX_AGE
              value: "{{ .Values.traefik.middleware.cors.enhanced.maxAge | default 86400 }}"
            - name: SECURITY_HEADERS_ENABLED
              value: "{{ .Values.services.corsHandler.securityHeaders.enabled | default true }}"
            # Additional environment variables from values
            {{- if .Values.services.corsHandler.env }}
            {{- toYaml .Values.services.corsHandler.env | nindent 12 }}
            {{- end }}
          # Volume mounts for configuration
          volumeMounts:
            - name: config
              mountPath: /etc/cors-handler
              readOnly: true
            - name: tmp
              mountPath: /tmp
            - name: cache
              mountPath: /var/cache
      # Volumes
      volumes:
        - name: config
          configMap:
            name: {{ include "pvpipe.fullname" . }}-cors-handler-config
            defaultMode: 0444
        - name: tmp
          emptyDir:
            sizeLimit: 100Mi
        - name: cache
          emptyDir:
            sizeLimit: 50Mi
      # Node selection and tolerations
      {{- with .Values.services.corsHandler.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.services.corsHandler.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.services.corsHandler.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      # Pod disruption budget considerations
      {{- if .Values.services.corsHandler.podDisruptionBudget.enabled }}
      # Note: PodDisruptionBudget is created separately
      {{- end }}
{{- end }}