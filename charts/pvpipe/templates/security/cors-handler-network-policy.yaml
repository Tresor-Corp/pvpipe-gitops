{{- if and .Values.traefik.enabled .Values.services.corsHandler.enabled .Values.networkPolicy.corsHandler.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "pvpipe.fullname" . }}-cors-handler
  labels:
    {{- include "pvpipe.labels" . | nindent 4 }}
    app.kubernetes.io/component: cors-handler
  annotations:
    security.pvpipe.io/purpose: "Restrict CORS handler network access"
spec:
  podSelector:
    matchLabels:
      {{- include "pvpipe.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: cors-handler
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Only allow ingress from Traefik
  - from:
    - namespaceSelector:
        matchLabels:
          name: {{ .Values.traefik.namespace | default "traefik" }}
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: traefik
    ports:
    - protocol: TCP
      port: {{ .Values.services.corsHandler.port | default 8080 }}
  # Allow ingress for health checks from kube-system
  - from:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: {{ .Values.services.corsHandler.port | default 8080 }}
  egress:
  # No external egress needed - this is a stateless CORS handler
  # Only allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
{{- end }}