apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-secret
type: Opaque
data:
  {{- range $key, $value := .Values.env }}
  {{- if or (contains "SECRET" $key) (contains "CERT" $key) (contains "PASSWORD" $key) (contains "_KEY" $key) (contains "DATABASE" $key) }}
  {{ $key }}: {{ $value | toString | b64enc | quote }}
  {{- end }}
  {{- end }}
  # Construct DATABASE_URL for services to connect through PgBouncer from individual env vars
  {{- if and .Values.env .Values.env.DATABASE_HOST .Values.env.DATABASE_NAME .Values.env.DATABASE_USER .Values.env.DATABASE_PASSWORD }}
  {{- $pgbouncerHost := printf "%s-pgbouncer" (include "pvpipe.fullname" .) }}
  {{- $pgbouncerPort := .Values.pgbouncer.config.listenPort | default 6432 | toString }}
  {{- $pgbouncerUrl := printf "postgresql://%s:%s@%s:%s/%s" .Values.env.DATABASE_USER .Values.env.DATABASE_PASSWORD $pgbouncerHost $pgbouncerPort .Values.env.DATABASE_NAME }}
  DATABASE_URL: {{ $pgbouncerUrl | b64enc | quote }}
  {{- end }}
  {{- if and .Values.meilisearch.enabled .Values.meilisearch.masterKey }}
  meilisearch-master-key: {{ .Values.meilisearch.masterKey | b64enc | quote }}
  {{- end }}
